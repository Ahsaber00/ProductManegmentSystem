// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManegmentSystem.Context;

#nullable disable

namespace ProductManegmentSystem.Migrations
{
    [DbContext(typeof(ProductManegmentContext))]
    partial class ProductManegmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManegmentSystem.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices, gadgets, and accessories",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Books of all genres and formats",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Home appliances and kitchen tools",
                            Name = "Home & Kitchen"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Men's, Women's, and Children's clothing",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Equipment and gear for outdoor activities",
                            Name = "Sports & Outdoors"
                        });
                });

            modelBuilder.Entity("ProductManegmentSystem.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Latest 5G smartphone",
                            ImageFileName = "1-2-samsung-mobile-phone-free-png-image.png",
                            Price = 799.99m,
                            Quantity = 50,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Noise-cancelling earbuds",
                            ImageFileName = "airpods.JPEG",
                            Price = 149.99m,
                            Quantity = 150,
                            Title = "Wireless Earbuds"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Classic novel by F. Scott Fitzgerald",
                            ImageFileName = "book.jpeg",
                            Price = 10.99m,
                            Quantity = 100,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "A Memoir by Tara Westover",
                            ImageFileName = "book2.jpeg",
                            Price = 18.99m,
                            Quantity = 60,
                            Title = "Educated"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "High-speed blender for smoothies",
                            ImageFileName = "blender.jpeg",
                            Price = 79.99m,
                            Quantity = 30,
                            Title = "Blender"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Automatic drip coffee machine",
                            ImageFileName = "cofeemaker.jpeg",
                            Price = 49.99m,
                            Quantity = 40,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Description = "Cotton crewneck t-shirt",
                            ImageFileName = "menTshirt.jpeg",
                            Price = 12.99m,
                            Quantity = 200,
                            Title = "Men's T-Shirt"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "Skinny fit jeans for women",
                            ImageFileName = "womenjeans.jpeg",
                            Price = 49.99m,
                            Quantity = 120,
                            Title = "Women's Jeans"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Description = "Eco-friendly non-slip yoga mat",
                            ImageFileName = "YogaMat.jpeg",
                            Price = 24.99m,
                            Quantity = 100,
                            Title = "Yoga Mat"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Description = "Professional-grade tennis racket",
                            ImageFileName = "racket.jpeg",
                            Price = 119.99m,
                            Quantity = 50,
                            Title = "Tennis Racket"
                        });
                });

            modelBuilder.Entity("ProductManegmentSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductManegmentSystem.Models.Product", b =>
                {
                    b.HasOne("ProductManegmentSystem.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductManegmentSystem.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
